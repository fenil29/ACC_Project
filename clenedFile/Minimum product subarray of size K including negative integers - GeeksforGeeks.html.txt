Minimum product subarray of size K including negative integers - GeeksforGeeks                                                     Skip to content                                                      Tutorials  Practice DS &amp; Algo.  Must Do Questions DSA Topic-wise DSA Company-wise  Algorithms  Analysis of Algorithms  Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question  Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Bitwise Algorithms Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms  Data Structures  Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures  Interview Corner  Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns System Design Tutorial Multiple Choice Quizzes  Languages  C C++ Java Python C# JavaScript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin  CS Subjects  Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering  GATE  GATE Computer Science Notes Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS  Web Technologies  HTML CSS JavaScript AngularJS ReactJS NodeJS Bootstrap jQuery PHP  Software Designs  Software Design Patterns System Design Tutorial  School Learning  School Programming Mathematics  Number System Algebra Trigonometry Statistics Probability Geometry Mensuration Calculus  Maths Notes (Class 8-12)  Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes Class 12 Notes  NCERT Solutions  Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution  RD Sharma Solutions  Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution  Physics Notes (Class 8-11)  Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes   ISRO CS  ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam  UGC NET CS  UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers   Student  Campus Ambassador Program School Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Geek on the Top Careers Internship  Jobs  Apply for Jobs Post a Job  Courses                    Write   Come write articles for us and get featured         Practice   Learn and code with the best industry experts         Premium   Get access to ad-free content, doubt assistance and more!         Jobs   Come and find your dream job with us       Geeks Digest Quizzes Geeks Campus   Gblog Articles IDE Campus Mantri                Home Saved Videos Courses   GBlog Puzzles What's New ?        Change Language         Data Structures Algorithms Interview Preparation Topic-wise Practice C++ Java Python Competitive Programming Machine Learning Web Development Puzzles Project Ideas School Learning          Related Articles         ?       Related Articles    Arrays in Java Write a program to reverse an array or string Largest Sum Contiguous Subarray Program for array rotation Stack Data Structure (Introduction and Program) Arrays in C/C++ Given an array A[] and a number x, check for pair in A[] with sum as x Linear Search Maximum and minimum of an array using minimum number of comparisons K'th Smallest/Largest Element in Unsorted Array | Set 1 Subset Sum Problem | DP-25 Multidimensional Arrays in Java Write a program to reverse an array or string Python | Using 2D arrays/lists the right way Count Inversions in an array | Set 1 (Using Merge Sort) Find the Missing Number Array of Strings in C++ (5 Different Ways to Create) Search an element in a sorted and rotated array Queue | Set 1 (Introduction and Array Implementation) Linked List vs Array Program to find largest element in an array Sort an array of 0s, 1s and 2s Print a given matrix in spiral form Merge two sorted arrays Stock Buy Sell to Maximize Profit k largest(or smallest) elements in an array | added Min Heap method Find subarray with given sum | Set 1 (Nonnegative Numbers) Sliding Window Maximum (Maximum of all subarrays of size k) Next Greater Element Find Second largest element in an array         Table of Contents   Arrays in Java Write a program to reverse an array or string Largest Sum Contiguous Subarray Program for array rotation Stack Data Structure (Introduction and Program) Arrays in C/C++ Given an array A[] and a number x, check for pair in A[] with sum as x Linear Search Maximum and minimum of an array using minimum number of comparisons K'th Smallest/Largest Element in Unsorted Array | Set 1 Subset Sum Problem | DP-25 Multidimensional Arrays in Java Write a program to reverse an array or string Python | Using 2D arrays/lists the right way Count Inversions in an array | Set 1 (Using Merge Sort) Find the Missing Number Array of Strings in C++ (5 Different Ways to Create) Search an element in a sorted and rotated array Queue | Set 1 (Introduction and Array Implementation) Linked List vs Array Program to find largest element in an array Sort an array of 0s, 1s and 2s Print a given matrix in spiral form Merge two sorted arrays Stock Buy Sell to Maximize Profit k largest(or smallest) elements in an array | added Min Heap method Find subarray with given sum | Set 1 (Nonnegative Numbers) Sliding Window Maximum (Maximum of all subarrays of size k) Next Greater Element Find Second largest element in an array          Improve Article     Save Article     Like Article     Minimum product subarray of size K including negative integers    Last Updated : 26 Nov, 2021     Given an array arr[] of length N, the task is to find the minimum product of subarray of size K of an array including negative integers. Example:  Attention reader! Don?t stop learning now. Get hold of all the important DSA concepts with the DSA Self Paced Course at a student-friendly price and become industry ready.&nbsp; To complete your preparation from learning a language to DS Algo and many more,&nbsp; please refer Complete Interview Preparation Course. In case you wish to attend live classes with experts, please refer DSA Live Classes for Working Professionals and Competitive Programming Live for Students.   Input: arr = [2, 3, -1, -5, 4, 0], K = 3Output: -6&nbsp;Explanation: The produt of the subarray {2, 3, -1} is -6 which is the minimum possible.       Input: arr = [-2, -4, 0, 1, 5, -6, 9], K =4Output: -270Explanation: The produt of the subarray {1, 5, -6, 9} is -270 which is the minimum possible.   &nbsp;  If the array consists of only positive numbers the problem can be efficiently solved using only the sliding window technique as discussed here. Approach: The given problem can be solved using the two-pointers technique and the sliding window approach. Below steps can be followed to solve the problem:  Iterate the array arr till K ? 1 and multiply every non-zero number to find the product and also count the number of zeros in the subarray. Iterate the array arr from K till&nbsp;the end of the array and at every iteration:  If the current element is not a zero then multiply it to the product or else increment the count of zeros&nbsp; If the element to the left of the current sliding window is not a zero then&nbsp;divide the product by that element or else reduce the count of zeros If the number of zeros in the sliding window is 0 then update the result with the current product or else update it with zero  Return the result res.  Below is the implementation of the above approach:  Java                          // Java implementation for the above approach   &nbsp;&nbsp;   import java.io.*;   import java.util.*;   &nbsp;&nbsp;   class GFG {   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp; // Function to find the minimum   &nbsp;&nbsp;&nbsp;&nbsp; // product of subarray of size K   &nbsp;&nbsp;&nbsp;&nbsp; public static int minProdK(   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int arr[],  int K)   &nbsp;&nbsp;&nbsp;&nbsp; {   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Initialize prod to 1   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // and zeros to 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int prod =  1 , zeros =  0 ;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Initialize length of the array   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int N = arr.length;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Iterate the array arr till K - 1   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for ( int i =  0 ; i &lt; K; i++) {   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If current element is 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // then increment zeros   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arr[i] ==  0 )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zeros++;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Else multiply current   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // element to prod   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prod *= arr[i];   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Initialize prod to 0 if zeros &gt; 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // else to prod   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int res = zeros ==  0 ? prod :  0 ;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Iterate the array arr   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // from K till the end   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for ( int right = K; right &lt; N; right++) {   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If current element is 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // then increment zeros   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arr[right] ==  0 )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zeros++;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Else multiply arr[right]   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // to prod   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prod *= arr[right];   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If leftmost element in   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // the sliding window is 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // then decrement zeros   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arr[right - K] ==  0 )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zeros--;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Else divide prod by arr[right-K]   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prod /= arr[right - K];   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If zeros == 0 then update   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // res by taking minimum value   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // of res and prod   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (zeros ==  0 )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = Math.min(res, prod);   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If zeros &gt; 0 and res &gt; 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // then initialize res to 0   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (res &gt;  0 )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res =  0 ;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return the answer as res   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return res;   &nbsp;&nbsp;&nbsp;&nbsp; }   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp; // Driver code   &nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args)   &nbsp;&nbsp;&nbsp;&nbsp; {   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Initialize the array   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int [] arr = {  2 ,  3 , - 1 , - 5 ,  4 ,  0 };   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Initialize the value of K   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int K =  3 ;   &nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Call the function and   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // print the result   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(minProdK(arr, K));   &nbsp;&nbsp;&nbsp;&nbsp; }   }                       Output -6   Time Complexity: O(N)Auxiliary Space: O(1)          My Personal Notes arrow_drop_up      Save           Like      Previous  Count of nodes in a given N-ary tree having distance to all leaf nodes equal in their subtree    Next   Maximum count of connected duplicate nodes in given N-ary Tree          Recommended Articles     Page :             Convert Decimal To Hexa-Decimal including negative numbers   02, Dec 19       Maximum Product Subarray | Added negative product case   25, Mar 18       Smallest pair of indices with product of subarray co-prime with product of the subarray on the left or right   23, Nov 20       Longest Subarray of non-negative Integers   09, Jun 17           Check whether product of integers from a to b is positive , negative or zero   14, May 19       Minimum product of k integers in an array of positive Integers   15, Oct 17       Length of longest subarray with negative product   02, Jul 20       Minimum length paths between 1 to N including each node   03, Sep 21           Number of minimum length paths between 1 to N including each node   20, Aug 21       Minimum cost to convert all elements of a K-size subarray to 0 from given Ternary Array with subarray sum as cost   05, Jul 21       Lexicographically smallest permutation of size A having B integers exceeding all preceding integers   06, Oct 20       Maximize difference of integers in a subarray of size K   10, Nov 21           Minimum operations to make product of adjacent element pair of prefix sum negative   23, Jun 21       Total ways of selecting a group of X men from N men with or without including a particular man   24, Sep 19       Count of contiguous subarrays possible for every index by including the element at that index   08, May 20       Subsequences generated by including characters or ASCII value of characters of given string   02, Dec 20           Maximum sum subsequence made up of at most K distant elements including the first and last array elements   22, Feb 21       Maximum number of pairs of distinct array elements possible by including each element in only one pair   03, Aug 21       First subarray having sum at least half the maximum sum of any subarray of size K   09, Sep 20       Maximize product of min value of subarray and sum of subarray over all subarrays of length K   17, Nov 21           Maximum subarray size, such that all subarrays of that size have sum less than k   30, Dec 16       Largest product of a subarray of size k   28, Jul 16       Smallest subarray whose product leaves remainder K when divided by size of the array   18, Jul 20       Random list of M non-negative integers whose sum is N   10, Oct 19                Article Contributed By :         rajakbiswajit409   @rajakbiswajit409        Vote for difficulty    Easy Normal Medium Hard Expert         Article Tags :   sliding-window subarray two-pointer-algorithm Arrays Mathematical     Practice Tags :   sliding-window two-pointer-algorithm Arrays Mathematical       Report Issue        Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.     Load Comments                      What's New              DSA Live Classes for Working Professionals    View Details                 Competitive Programming Live Classes for Students    View Details                 DSA Self Paced Course    View Details                     Most popular in Arrays       Trapping Rain Water Given an array of size n and a number k, find all elements that appear more than n/k times Program to find sum of elements in a given array Building Heap from Array Remove duplicates from sorted array                    Most visited in Mathematical       Program for Fibonacci numbers C++ Data Types Write a program to print all permutations of a given string Set in C++ Standard Template Library (STL) Program for Decimal to Binary Conversion                              &times;                                                                       5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305    feedback@geeksforgeeks.org                 Company About Us Careers Privacy Policy Contact Us Copyright Policy   Learn Algorithms Data Structures Languages CS Subjects Video Tutorials   Web Development Web Tutorials HTML CSS JavaScript Bootstrap   Contribute Write an Article Write Interview Experience Internships Videos      @geeksforgeeks , Some rights reserved            We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy &amp; Privacy Policy  Got It !